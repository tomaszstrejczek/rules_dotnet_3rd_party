jobs:
- job: BuildAndTest  
  strategy:
    matrix:
      linux:
        poolName: 'Azure Pipelines'
        vmImage: 'ubuntu-latest'       
        systemName: 'linux'
        bazel_startup: '--host_jvm_args=-Xmx500m --host_jvm_args=-Xms500m'
      windows:
        poolName: 'Azure Pipelines'
        vmImage: 'windows-2019'
        systemName: 'windows'
        bazel_startup: '--output_user_root=c:\tmp --host_jvm_args=-Xmx500m --host_jvm_args=-Xms500m'
      mac:
        poolName: 'Azure Pipelines'
        vmImage: 'macOS-10.15'
        systemName: 'mac'
        bazel_startup: '--host_jvm_args=-Xmx500m --host_jvm_args=-Xms500m'
  pool:
    name: $(poolName)
    vmImage: $(vmImage)


  steps:
    - script: |
        echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
        curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
        sudo apt-get update && sudo apt-get install -y bazel
      displayName: 'Install dependencies'
      condition: and(succeeded(), eq(variables['systemName'], 'linux'))

    - script: |
        brew list bazel &>/dev/null || brew install bazel 
      displayName: 'Install dependencies osx'
      condition: and(succeeded(), eq(variables['systemName'], 'mac'))
       
    - script: |
        choco install bazel mono
      displayName: 'Install dependencies'
      condition: and(succeeded(), eq(variables['systemName'], 'windows'))

    - script: |
        bazel version
      displayName: 'Show bazel version'

    - script: |
        bazel $(bazel_startup) build -s --spawn_strategy=standalone //all.build 
      displayName: 'Build all'
